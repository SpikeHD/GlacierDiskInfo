name: Release GUI

on:
  workflow_run:
    workflows: ["Build GUI"]
    branches: [main]
    types:
      - completed

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_check.outputs.changed }}
      new_version: ${{ steps.version_check.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract new version
        id: version_check
        run: |
          VERSION=$(grep '^version =' gui/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "New version: $VERSION"
          if git tag -l | grep -q "glacierdisk-gui-v$VERSION"; then
            echo "changed=false" >> $GITHUB_ENV
          else
            echo "changed=true" >> $GITHUB_ENV
            echo "version=$VERSION" >> $GITHUB_ENV
          fi

  create-tag:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/glacierdisk-gui-v${{ needs.check-version.outputs.new_version }}',
              sha: context.sha
            })

  create-release:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: glacierdisk-gui-x86_64-unknown-linux-gnu-deb
          path: gui/target/dx/glacierdisk-gui/bundle/linux/bundle/deb

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.check-version.outputs.new_version }}
          release_name: GUI v${{ needs.check-version.outputs.new_version }}
          draft: false
          prerelease: false
          body: "New release of the GUI application."